version: 2.1

workflows:
  test-and-publish-permissions-API:
    jobs:
      - run-tests:
          name: test-api
      - hold:
          type: approval
          requires:
            - test-api
      - publish:
          requires:
            - test-api
            - hold
          filters:
            branches:
              only: master
jobs:
  run-tests:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Pull test data and plugins submodules
          command: |
            git submodule init
            git submodule update
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Start KEYCLOAK
          command: |
            docker-compose -f docker-compose.tests.yml up -d keycloak
      - run:
          name: Start MONGO
          command: |
            docker-compose -f docker-compose.tests.yml up -d mongo
      - run:
          name: Wait for mongodb
          command: |
            docker-compose -f docker-compose.tests.yml logs mongo
            dockerize -wait tcp://172.21.0.1:27017 -timeout 5m
      - run:
          name: Wait for keycloak
          command: |
            docker-compose -f docker-compose.tests.yml logs keycloak
            dockerize -wait tcp://172.21.0.1:8080 -timeout 5m
      - run:
          name: KC & MongoDB permissions
          command: |
            sudo usermod -a -G docker $USER
            sudo chmod -R 777 ./
      - run:
          name: Run Tests with Jest
          command: |
            docker-compose -f docker-compose.tests.yml run permissions-api npm test
  publish:
    docker:
      - image: cimg/node:16.4.1
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run: 
          command: | 
            TAG=0.1.${CIRCLE_BUILD_NUM} 
            docker build -f Dockerfile.production -t acavalls/ipc-permissions-api:$TAG -t acavalls/ipc-permissions-api:latest .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push acavalls/ipc-permissions-api:$TAG
            docker push acavalls/ipc-permissions-api:latest
